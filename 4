/*
Еден елемент од матрица ја дели матрицата на 4 квадранти (прикажани на сликата). Притоа самиот елемент кој ја дели матрицата припаѓа во четвртиот квадрант (-5 во примерот на сликата).

Од стандарден влез се внесува матрица со димензии NxM (1 <= N, M < 100). Потоа се внесуваат два броеви кои претставуваат индекси на еден елемент од матрицата.

Да се најдат сумите на секој од квадрантите и да се испечатат на стандарен излез. Притоа се печати сумата за првиот квадрант, па за вториот, па третиот и на крај за четвртиот. Доколку не може да се креира квадрант, тогаш за сумата на тој квадрант треба да се испечати 0.
*/


int main()
{
    int n,m, sum1 = 0, sum2 = 0, sum3 = 0, sum4 = 0;
    scanf("%d %d", &n,&m);
    int niza[n][m];
    
    
    for (int i=0; i<n; i++) {
        for (int j=0; j<m; j++) {
            scanf("%d", &niza[i][j]);
        }
    }
    
    int i1, j1;
    scanf("%d %d", &i1, &j1);
    
    for (int i=0; i<n; i++) {
        for(int j=0; j<m; j++) { 
            if (i >= i1 && j >= j1) 
                sum4 += niza[i][j];
            if (i < i1 && j >= j1) 
                sum1 += niza[i][j];
            if (i < i1 && j < j1)   
                sum2 += niza[i][j];
            if (i >= i1 && j < j1)   
                sum3 += niza[i][j];  
        }
    }
    
  
    
    
    // sum1(1)  sum2(5)  sum3(15) sum4(5) moe
    
    // sum1(15) sum2(5)  sum3(1)  sum4(5) resenie
    
    // for (int i=0; i<n; i++) {
    //     //printf("\n");
    //     for (int j=0; j<m; j++) {
    //         printf("%d ", niza[i][j]);
    //     }
    // }
    
    
    // printf(" %d", sum1);
    // printf("j1: %d", sum1);
    
    printf("%d ", sum1);
    printf("%d ", sum2);
    printf("%d ", sum3);
    printf("%d" , sum4);
    return 0;
}
