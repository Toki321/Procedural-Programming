/*
Да се имплементира рекурзивна функција која за низа од цели броеви $[a{0}, a{1}, ..., a_{n-1}]$ ќе ја пресмета вредноста на непрекинатата дропка дефинирана како:

v=a0+1a1+...1an−2+1an−1

Да се напише програма во која се чита цел број N, по што се читаат елементите на низа од N цели броеви (не повеќе од 100). Потоа се повикува рекурзивната функција и се печати резултатот во нов ред.
*/

#include <stdio.h>

int global;


double recursion(int niza[], int n) {
    if (global == 1) 
        return niza[n];
    else if (n < global-1)    
        return niza[n] + 1. /recursion(niza, n+1);
    else 
        return niza[n];
}

int main()
{
   int n;
   scanf("%d", &n);
    global = n;
  
   int arr[n];
   for (int i=0; i<n; i++) {
       scanf("%d", &arr[i]);
   }
   
   printf("%f", recursion(arr, 0)); // 1.500000 expected

    return 0;
}
